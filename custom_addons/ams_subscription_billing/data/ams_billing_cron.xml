<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        
        <!-- Daily Billing Processing Cron -->
        <record id="cron_ams_process_billing_schedules" model="ir.cron">
            <field name="name">AMS: Process Due Billing Schedules</field>
            <field name="model_id" ref="model_ams_billing_schedule"/>
            <field name="state">active</field>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="code">model.cron_process_due_billing()</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(hours=2)).strftime('%Y-%m-%d 02:00:00')"/>
            <field name="priority">5</field>
        </record>

        <!-- Hourly Payment Processing Cron -->
        <record id="cron_ams_process_pending_payments" model="ir.cron">
            <field name="name">AMS: Process Pending Automatic Payments</field>
            <field name="model_id" ref="account.model_account_move"/>
            <field name="state">active</field>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">hours</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="code">model.cron_process_ams_pending_payments()</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(minutes=30)).strftime('%Y-%m-%d %H:30:00')"/>
            <field name="priority">10</field>
        </record>

        <!-- Payment Retry Processing Cron -->
        <record id="cron_ams_process_payment_retries" model="ir.cron">
            <field name="name">AMS: Process Due Payment Retries</field>
            <field name="model_id" ref="model_ams_payment_retry"/>
            <field name="state">active</field>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">4</field>
            <field name="interval_type">hours</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="code">model.cron_process_due_retries()</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(hours=1)).strftime('%Y-%m-%d %H:00:00')"/>
            <field name="priority">15</field>
        </record>

        <!-- Daily Dunning Processing Cron -->
        <record id="cron_ams_process_dunning" model="ir.cron">
            <field name="name">AMS: Process Due Dunning Actions</field>
            <field name="model_id" ref="model_ams_dunning_process"/>
            <field name="state">active</field>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="code">model.cron_process_dunning()</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(hours=10)).strftime('%Y-%m-%d 10:00:00')"/>
            <field name="priority">20</field>
        </record>

        <!-- Weekly Billing Events Cleanup -->
        <record id="cron_ams_cleanup_billing_events" model="ir.cron">
            <field name="name">AMS: Cleanup Old Billing Events</field>
            <field name="model_id" ref="model_ams_billing_event"/>
            <field name="state">active</field>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">weeks</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="code">model.cron_process_pending_billing_events()</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(days=7)).strftime('%Y-%m-%d 03:00:00')"/>
            <field name="priority">25</field>
        </record>

        <!-- Monthly Automation Error Cleanup -->
        <record id="cron_ams_cleanup_automation_errors" model="ir.cron">
            <field name="name">AMS: Cleanup Old Automation Errors</field>
            <field name="model_id" ref="account.model_account_move"/>
            <field name="state">active</field>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">months</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="code">model.cron_cleanup_ams_automation_errors()</field>
            <field name="nextcall" eval="(DateTime.now().replace(day=1) + timedelta(days=32)).replace(day=1).strftime('%Y-%m-%d 01:00:00')"/>
            <field name="priority">30</field>
        </record>

        <!-- Subscription Health Check Cron (Weekly) -->
        <record id="cron_ams_subscription_health_check" model="ir.cron">
            <field name="name">AMS: Subscription Billing Health Check</field>
            <field name="model_id" ref="ams_subscriptions.model_ams_subscription"/>
            <field name="state">active</field>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">weeks</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="code">
# Health check for subscriptions with billing issues
subscriptions = env['ams.subscription'].search([
    ('state', '=', 'active'),
    ('has_payment_issues', '=', True)
])

# Log health check results
env['ir.logging'].create({
    'name': 'ams_subscription_billing.health_check',
    'type': 'server',
    'level': 'INFO',
    'message': f'Health check completed: {len(subscriptions)} subscriptions with payment issues',
    'path': 'ams_subscription_billing',
    'func': 'cron_health_check',
    'line': '0',
})
            </field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(days=7)).strftime('%Y-%m-%d 08:00:00')"/>
            <field name="priority">35</field>
        </record>

    </data>
</odoo>