<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        
        <!-- ===== AMS SECURITY CATEGORIES ===== -->
        <record id="module_category_ams" model="ir.module.category">
            <field name="name">Association Management</field>
            <field name="description">Association Management System permissions</field>
            <field name="sequence">50</field>
        </record>

        <!-- ===== AMS USER GROUPS ===== -->
        
        <!-- AMS Member Group - Basic member access -->
        <record id="group_ams_member" model="res.groups">
            <field name="name">AMS Member</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="comment">Basic member access - can view own profile and update limited fields</field>
        </record>

        <!-- AMS Staff Group - Staff member access -->
        <record id="group_ams_staff" model="res.groups">
            <field name="name">AMS Staff</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_member'))]"/>
            <field name="comment">Staff access - can manage member profiles and view member data</field>
        </record>

        <!-- AMS Manager Group - Manager access -->
        <record id="group_ams_manager" model="res.groups">
            <field name="name">AMS Manager</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="comment">Manager access - can manage all member operations and reports</field>
        </record>

        <!-- AMS Administrator Group - Full system access -->
        <record id="group_ams_admin" model="res.groups">
            <field name="name">AMS Administrator</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_manager'))]"/>
            <field name="comment">Full administrative access - can configure system and manage all data</field>
        </record>

        <!-- Privacy Officer Group - Privacy and compliance access -->
        <record id="group_ams_privacy_officer" model="res.groups">
            <field name="name">AMS Privacy Officer</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="comment">Privacy officer access - can manage consent, privacy settings, and data retention</field>
        </record>

        <!-- Data Quality Officer Group - Data management access -->
        <record id="group_ams_data_officer" model="res.groups">
            <field name="name">AMS Data Quality Officer</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="comment">Data quality officer access - can manage duplicates, data quality, and imports</field>
        </record>

        <!-- ===== RECORD RULES FOR RES.PARTNER ===== -->
        
        <!-- Members can only see their own record -->
        <record id="res_partner_member_rule" model="ir.rule">
            <field name="name">Member: Own Partner Record Only</field>
            <field name="model_id" ref="base.model_res_partner"/>
            <field name="domain_force">[('id', '=', user.partner_id.id)]</field>
            <field name="groups" eval="[(4, ref('group_ams_member'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Staff can see all member records -->
        <record id="res_partner_staff_rule" model="ir.rule">
            <field name="name">Staff: All Partner Records</field>
            <field name="model_id" ref="base.model_res_partner"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Managers can delete partner records -->
        <record id="res_partner_manager_rule" model="ir.rule">
            <field name="name">Manager: Full Partner Access</field>
            <field name="model_id" ref="base.model_res_partner"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_manager'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

        <!-- ===== RECORD RULES FOR MEMBER PROFILE ===== -->
        
        <!-- Members can only see their own profile -->
        <record id="member_profile_member_rule" model="ir.rule">
            <field name="name">Member: Own Profile Only</field>
            <field name="model_id" ref="model_ams_member_profile"/>
            <field name="domain_force">[('partner_id', '=', user.partner_id.id)]</field>
            <field name="groups" eval="[(4, ref('group_ams_member'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Staff can see all member profiles -->
        <record id="member_profile_staff_rule" model="ir.rule">
            <field name="name">Staff: All Member Profiles</field>
            <field name="model_id" ref="model_ams_member_profile"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Managers can delete member profiles -->
        <record id="member_profile_manager_rule" model="ir.rule">
            <field name="name">Manager: Full Profile Access</field>
            <field name="model_id" ref="model_ams_member_profile"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_manager'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

        <!-- ===== RECORD RULES FOR AUDIT LOG ===== -->
        
        <!-- Staff can only read audit logs -->
        <record id="audit_log_staff_rule" model="ir.rule">
            <field name="name">Staff: Read Audit Logs</field>
            <field name="model_id" ref="model_ams_audit_log"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Managers can write to audit logs (for review) -->
        <record id="audit_log_manager_rule" model="ir.rule">
            <field name="name">Manager: Audit Log Review Access</field>
            <field name="model_id" ref="model_ams_audit_log"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_manager'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Admins can manage audit logs -->
        <record id="audit_log_admin_rule" model="ir.rule">
            <field name="name">Admin: Full Audit Log Access</field>
            <field name="model_id" ref="model_ams_audit_log"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_admin'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

        <!-- ===== RECORD RULES FOR PROFESSIONAL DESIGNATIONS ===== -->
        
        <!-- All users can read designations -->
        <record id="professional_designation_read_rule" model="ir.rule">
            <field name="name">All: Read Professional Designations</field>
            <field name="model_id" ref="model_ams_professional_designation"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Staff can manage designations -->
        <record id="professional_designation_staff_rule" model="ir.rule">
            <field name="name">Staff: Manage Professional Designations</field>
            <field name="model_id" ref="model_ams_professional_designation"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Admins can delete designations -->
        <record id="professional_designation_admin_rule" model="ir.rule">
            <field name="name">Admin: Full Designation Access</field>
            <field name="model_id" ref="model_ams_professional_designation"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_admin'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

        <!-- ===== RECORD RULES FOR MEMBER SPECIALTIES ===== -->
        
        <!-- All users can read specialties -->
        <record id="member_specialty_read_rule" model="ir.rule">
            <field name="name">All: Read Member Specialties</field>
            <field name="model_id" ref="model_ams_member_specialty"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Staff can manage specialties -->
        <record id="member_specialty_staff_rule" model="ir.rule">
            <field name="name">Staff: Manage Member Specialties</field>
            <field name="model_id" ref="model_ams_member_specialty"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Admins can delete specialties -->
        <record id="member_specialty_admin_rule" model="ir.rule">
            <field name="name">Admin: Full Specialty Access</field>
            <field name="model_id" ref="model_ams_member_specialty"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_admin'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

        <!-- ===== FIELD-LEVEL SECURITY (SENSITIVE FIELDS) ===== -->
        
        <!-- Sensitive partner fields restricted to staff+ -->
        <record id="field_res_partner_date_of_birth" model="ir.model.fields">
            <field name="name">date_of_birth</field>
            <field name="model">res.partner</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
        </record>

        <record id="field_res_partner_gender" model="ir.model.fields">
            <field name="name">gender</field>
            <field name="model">res.partner</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
        </record>

        <record id="field_res_partner_tax_id_registration" model="ir.model.fields">
            <field name="name">tax_id_registration</field>
            <field name="model">res.partner</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
        </record>

        <!-- Sensitive profile fields restricted to staff+ -->
        <record id="field_member_profile_ethnicity" model="ir.model.fields">
            <field name="name">ethnicity</field>
            <field name="model">ams.member.profile</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
        </record>

        <record id="field_member_profile_emergency_contact_name" model="ir.model.fields">
            <field name="name">emergency_contact_name</field>
            <field name="model">ams.member.profile</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
        </record>

        <record id="field_member_profile_emergency_contact_phone" model="ir.model.fields">
            <field name="name">emergency_contact_phone</field>
            <field name="model">ams.member.profile</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
        </record>

        <record id="field_member_profile_emergency_contact_email" model="ir.model.fields">
            <field name="name">emergency_contact_email</field>
            <field name="model">ams.member.profile</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
        </record>

        <record id="field_member_profile_internal_notes" model="ir.model.fields">
            <field name="name">internal_notes</field>
            <field name="model">ams.member.profile</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
        </record>

        <!-- Audit log sensitive fields restricted to managers+ -->
        <record id="field_audit_log_ip_address" model="ir.model.fields">
            <field name="name">ip_address</field>
            <field name="model">ams.audit.log</field>
            <field name="groups" eval="[(4, ref('group_ams_manager'))]"/>
        </record>

        <record id="field_audit_log_user_agent" model="ir.model.fields">
            <field name="name">user_agent</field>
            <field name="model">ams.audit.log</field>
            <field name="groups" eval="[(4, ref('group_ams_manager'))]"/>
        </record>

        <record id="field_audit_log_session_id" model="ir.model.fields">
            <field name="name">session_id</field>
            <field name="model">ams.audit.log</field>
            <field name="groups" eval="[(4, ref('group_ams_manager'))]"/>
        </record>

    </data>
</odoo>