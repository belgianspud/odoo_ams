<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        
        <!-- AMS Base Category -->
        <record id="module_category_ams" model="ir.module.category">
            <field name="name">Association Management System</field>
            <field name="description">Categories related to Association Management System</field>
            <field name="sequence">5</field>
        </record>

        <!-- AMS Guest Group -->
        <record id="group_ams_guest" model="res.groups">
            <field name="name">AMS Guest</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="comment">Basic access for non-members and guests. Can view public information only.</field>
        </record>

        <!-- AMS Member Group -->
        <record id="group_ams_member" model="res.groups">
            <field name="name">AMS Member</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_guest'))]"/>
            <field name="comment">Standard members can access member portal, manage their own profile, and view member directory.</field>
        </record>

        <!-- AMS Company Point of Contact Group -->
        <record id="group_ams_company_poc" model="res.groups">
            <field name="name">AMS Company POC</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_member'))]"/>
            <field name="comment">Company representatives can manage employee records and training assignments for their organization.</field>
        </record>

        <!-- AMS Staff Group -->
        <record id="group_ams_staff" model="res.groups">
            <field name="name">AMS Staff</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_company_poc'))]"/>
            <field name="comment">Internal association staff with access to member management and basic administrative functions.</field>
        </record>

        <!-- AMS Admin Group -->
        <record id="group_ams_admin" model="res.groups">
            <field name="name">AMS Administrator</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_staff')), (4, ref('base.group_system'))]"/>
            <field name="comment">Full administrative access to all AMS functions including system configuration and user management.</field>
        </record>

        <!-- Portal Access Groups -->
        <record id="group_ams_portal_member" model="res.groups">
            <field name="name">AMS Portal Member</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('base.group_portal')), (4, ref('group_ams_member'))]"/>
            <field name="comment">Members with portal access for online self-service.</field>
        </record>

        <record id="group_ams_portal_company_poc" model="res.groups">
            <field name="name">AMS Portal Company POC</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_portal_member')), (4, ref('group_ams_company_poc'))]"/>
            <field name="comment">Company POCs with portal access for employee management.</field>
        </record>

        <!-- Manager Groups for Multi-Company Support -->
        <record id="group_ams_manager" model="res.groups">
            <field name="name">AMS Manager</field>
            <field name="category_id" ref="module_category_ams"/>
            <field name="implied_ids" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="comment">AMS managers with access to reporting and advanced member management.</field>
        </record>

        <!-- Record Rules for Data Access -->
        
        <!-- Partners: Guests can only see public contacts -->
        <record id="rule_partner_guest" model="ir.rule">
            <field name="name">AMS Guest: Public Contacts Only</field>
            <field name="model_id" ref="base.model_res_partner"/>
            <field name="domain_force">[('is_published', '=', True)]</field>
            <field name="groups" eval="[(4, ref('group_ams_guest'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Partners: Members can see other members -->
        <record id="rule_partner_member" model="ir.rule">
            <field name="name">AMS Member: Can See Members</field>
            <field name="model_id" ref="base.model_res_partner"/>
            <field name="domain_force">['|', ('is_ams_member', '=', True), ('is_published', '=', True)]</field>
            <field name="groups" eval="[(4, ref('group_ams_member'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Partners: Members can edit their own record -->
        <record id="rule_partner_member_own" model="ir.rule">
            <field name="name">AMS Member: Edit Own Profile</field>
            <field name="model_id" ref="base.model_res_partner"/>
            <field name="domain_force">[('user_ids', 'in', [user.id])]</field>
            <field name="groups" eval="[(4, ref('group_ams_member'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Partners: Company POCs can manage their employees -->
        <record id="rule_partner_company_poc" model="ir.rule">
            <field name="name">AMS Company POC: Manage Employees</field>
            <field name="model_id" ref="base.model_res_partner"/>
            <field name="domain_force">[
                '|', 
                ('user_ids', 'in', [user.id]),
                ('id', 'in', [emp.partner_id.id for company in user.managed_company_ids for emp in company.get_employees()])
            ]</field>
            <field name="groups" eval="[(4, ref('group_ams_company_poc'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Partners: Staff can manage all contacts -->
        <record id="rule_partner_staff" model="ir.rule">
            <field name="name">AMS Staff: Manage All Contacts</field>
            <field name="model_id" ref="base.model_res_partner"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

        <!-- AMS Lookups: Guests can only read -->
        <record id="rule_ams_lookup_guest" model="ir.rule">
            <field name="name">AMS Guest: Read Lookups Only</field>
            <field name="model_id" ref="model_ams_lookup"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_guest'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- AMS Lookups: Staff can manage -->
        <record id="rule_ams_lookup_staff" model="ir.rule">
            <field name="name">AMS Staff: Manage Lookups</field>
            <field name="model_id" ref="model_ams_lookup"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

        <!-- AMS Config: Only admins can access -->
        <record id="rule_ams_config_admin" model="ir.rule">
            <field name="name">AMS Admin: Manage Configuration</field>
            <field name="model_id" ref="model_ams_config"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_admin'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

        <!-- Relationships: Members can see their own relationships -->
        <record id="rule_relationship_member" model="ir.rule">
            <field name="name">AMS Member: Own Relationships</field>
            <field name="model_id" ref="model_res_partner_relationship"/>
            <field name="domain_force">['|', ('partner_id.user_ids', 'in', [user.id]), ('related_partner_id.user_ids', 'in', [user.id])]</field>
            <field name="groups" eval="[(4, ref('group_ams_member'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Relationships: Company POCs can manage employee relationships -->
        <record id="rule_relationship_company_poc" model="ir.rule">
            <field name="name">AMS Company POC: Employee Relationships</field>
            <field name="model_id" ref="model_res_partner_relationship"/>
            <field name="domain_force">[
                '|',
                ('partner_id.user_ids', 'in', [user.id]),
                ('partner_id.id', 'in', [emp.partner_id.id for company in user.managed_company_ids for emp in company.get_employees()])
            ]</field>
            <field name="groups" eval="[(4, ref('group_ams_company_poc'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="False"/>
        </record>

        <!-- Relationships: Staff can manage all -->
        <record id="rule_relationship_staff" model="ir.rule">
            <field name="name">AMS Staff: All Relationships</field>
            <field name="model_id" ref="model_res_partner_relationship"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_staff'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

        <!-- User Roles: Only admins can manage -->
        <record id="rule_user_role_admin" model="ir.rule">
            <field name="name">AMS Admin: Manage User Roles</field>
            <field name="model_id" ref="model_ams_user_role"/>
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('group_ams_admin'))]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_unlink" eval="True"/>
        </record>

    </data>
</odoo>